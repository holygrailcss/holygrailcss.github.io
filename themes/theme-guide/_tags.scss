
@import "../../../holygrailcss/scss/abstract/mixins";


@import "../../../holygrailcss/scss/abstract/settings";
@import "../../../holygrailcss/scss/abstract/animations";
@import "../../../holygrailcss/scss/abstract/breakpoints";
@import "../../../holygrailcss/scss/abstract/fonts";





//rellenamos esta array con todas las variables, como queremos llamarla y cuanto es su valor. 
//despues creamos dos variables, 
//.var-a-nombre que es el nombre del array
// var-b-nombre que es el valor del contenido

$variable-list: (break-xs: #{$break-xs},
    /*Breakpoints*/
    break-sm: #{$break-sm},
    break-md: #{$break-md},
    break-lg: #{$break-lg},
    break-xl: #{$break-xl},
    min-vw: #{$min-vw},
    
    height-xs: #{$height-xs},
    height-sm: #{$height-sm},
    height-md: #{$height-md},
    height-lg: #{$height-lg},
    height-xl: #{$height-xl},
    height-full: #{$height-full},
    height-home: #{$height-home},
    container: #{$container}, 
    container-2: #{$container-2}, //maxwidth del container2
    container-3: #{$container-3}, //maxwidth del container2
    container-4: #{$container-4}, //maxwidth del container4

    font-primary: #{ $font-family-primary}, 

    font-primary-weight-light: #{ $font-weight-light}, 
    font-primary-weight-regular: #{ $font-weight-regular}, 
    font-primary-weight-medium: #{ $font-weight-medium}, 
    font-primary-weight-bold: #{ $font-weight-bold}, 


    font-family-secondary: #{ $font-family-secondary}, 

    font-secondary-weight-light: #{ $font-weight-secondary-light}, 

    font-secondary-weight-medium: #{ $font-weight-secondary-medium}, 
   /* font-secondary-weight-bold: #{ $font-weight-secondary-bold}, */



    xl: 1500px   );




    
$variabletotals: length($variable-list);
@for $i from 1 through $variabletotals {
    .var-a-#{nth(map-keys($variable-list), $i)} {
        &:after {
            display: inline-block;
            content: "#{nth(map-keys($variable-list), $i)}";
        }
    }
    .var-b-#{nth(map-keys($variable-list), $i)} {
        &:after {
            content: "#{nth(map-values($variable-list), $i)}";
            display: inline-block;
        }
    }
}




.tag-color-wrap {
    .wrap-item {
        .item {
            height: 100px;
            margin: 0;
            position: relative;
            &:after {
                font-size: 12px;
                position: absolute;
                top: 50%;
                margin-top: -10px;
                width: 100%;
                text-align: center;
                color: #fff;
            }
        }
    }
}



//var-height-sm
@each $name,
$value in $colorsGuide {
    $i: index(($colorsGuide), ($name $value));
    $color0: $name; //funcion del color
    $color1: nth($value, 1); //color
    $color2: nth($value, 2); //segundo nombre color

    .wrap-item {
        box-shadow: 0 9px 25px rgba(0, 0, 0, 0.06);
        margin: 0;
        position: relative;
        width: 100px;
        transition: all ease 300ms;
        &:hover {
            box-shadow: 0px 15px 19px 0px rgba(0, 0, 0, 0.16);
        }
    }
    .wrap-item:nth-child(#{$i}) {
        .item {
   
  
            background-color: $color1;
    
            &:after {
  
                content: "#{$color1}";
            }
        }
        float: left;
        padding: 0;
        margin-bottom: 10px;
        background-color: white;
        &:after {
            color: #fff;
            position: absolute;
            bottom: 10px;
            font-size: 12px;
            left: 16px;
            content: "#{$color2}";
        }
        :before {
            color: #fff;
            position: absolute;
            bottom: -40px;
            font-size: 14px;
            left: 0px;
            content: "#{$color0}";
        }
    }
}









.x-pd {
    border-color: #89fdfd;
}



.x-mg {
    border-color: #f264b8;
}
.x,
.x-x,
.x-y,
.x-t,
.x-r,
.x-b,
.x-l {
    box-sizing: border-box;
    margin: 20px 0;
    width: 100%;
    height: 100px;
    background: #eaeaea;
    border-style: solid;
}
.x {
    border-width: 20px;
}
.x-x {
    border-width: 0 20px;
}
.x-y {
    border-width: 20px 0;
}
.x-t {
    border-width: 20px 0 0 0;
}
.x-b {
    border-width: 0 0 20px 0;
}
.x-r {
    border-width: 0 20px 0 0;
}
.x-l {
    border-width: 0 0 0 20px;
}
.x-t {
    border-width: 20px 0 0 0;
}

/* TIPOGRAFIAS */





.guide table td {
    padding: 10px;
    vertical-align: top;
    border: 1px solid #eaeaea;
}




.resize {
    z-index: 10;
    width: 70%;
    box-sizing: border-box;
    padding: 10px;
    position: relative;
    user-select: none;

    &.resize-sm {
      max-width: 300px;
      height: 300px;
      .resizable{
        min-height: 300px;
      }

    }

    &.resize-md {
      max-width: 500px;
      height: 500px;
      .resizable{
        min-height: 500px;
      }

    }

    &.resize-lg {
      max-width: 900px;
      height: 500px;
      .resizable{
        min-height: 500px;
      }
    }
  }





.card3{
  width: 100%;
  float: left;

  span{position: absolute;
  bottom:8px;   //$padding-global
  left: 8px;
  }
  &.half{
    width: 50%;
  }
}


.arrow-cover {
  height: auto;
  padding: 30px;
  position: absolute;
  bottom: 0;
  right: 0;
  color: #fff;
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  opacity: 1;
  -webkit-box-align: end;
  -ms-flex-align: end;
  align-items: flex-end;
  transition: opacity .3s ease;

  z-index: 6;
}

.arrow-cover svg {
  -webkit-animation: bounce .8s infinite alternate;
  animation: bounce .8s infinite alternate
}



@-webkit-keyframes bounce {
  0% {
      -webkit-transform: translateZ(0);
      transform: translateZ(0)
  }

  to {
      -webkit-transform: translate3d(0,-15px,0);
      transform: translate3d(0,-15px,0)
  }
}

@keyframes bounce {
  0% {
      -webkit-transform: translateZ(0);
      transform: translateZ(0)
  }

  to {
      -webkit-transform: translate3d(0,-15px,0);
      transform: translate3d(0,-15px,0)
  }
}


.guide-dark-bg{
    position: relative;
    background: #000;
    padding: 10px 20px 20px;
    display: inline-block;
    &:after{
        content:'.has-light';
        color: #fff;
        position: absolute;
        font-size: 8px;
        top:2px;
        left: 5px;
        opacity: .8;
    }
}










.typelist-box {
    max-width: 900px;
    .item {
        box-sizing: border-box;
        width: 12%;
        border: 1px solid #d4d4d4;
        margin-right: -1px;
        margin-top: -1px;
        padding: 10px 0;
        position: relative;
    }

}


.wrap-item-type_header {
    .item {
        float: left;
        @include font-medium();

        border-bottom: 2px solid #d4d4d4;
        min-height: 70px;
        text-align: center;
        font-size: 14px;

        background-color: #121F2A;
        color: #fff;
    }
}


.wrap-item-type_header {
    float: left;
    position: relative;
    width: 100%;
    transition: all ease 300ms;

    .item {

        &:after {
            width: 100%;
            text-align: center;
        }
    }
    .item-0 {  word-wrap: break-word; }
    .item-1 { &:after { @include font-light(); content: " - #{$break-xs}"; } }
    .item-2 { &:after { @include font-light(); content: " - #{$break-sm}"; } }
    .item-3 { &:after { @include font-light(); content: " - #{$break-md}"; } }
    .item-4 { &:after { @include font-light(); content: " - #{$break-lg}"; } }
    .item-5 { &:after { @include font-light(); content: " - #{$break-xl}"; } }
    .item-6 { &:after { @include font-bold(); } }
    .item-7 { &:after { @include font-bold(); } }
}




.tag-wrap-item_header {
    float: left;
    position: relative;
    width: 100%;
    transition: all ease 300ms;
    display: table;

    .item {
        display: table-cell;

        &:after {
            width: 100%;
            text-align: center;
        }
    }
    .item-0 {  word-wrap: break-word; }
    .item-1 { &:after { @include font-light(); content: " - #{$break-xs}"; } }
    .item-2 { &:after { @include font-light(); content: " - #{$break-sm}"; } }
    .item-3 { &:after { @include font-light(); content: " - #{$break-md}"; } }
    .item-4 { &:after { @include font-light(); content: " - #{$break-lg}"; } }
    .item-5 { &:after { @include font-light(); content: " - #{$break-xl}"; } }
    .item-6 { &:after { @include font-bold(); } }
    .item-7 { &:after { @include font-bold(); } }
}


@each $name,
$value in $headers {
    $i: index(($headers), ($name $value));
    $type0: $name; //funcion del fipografia
    $type1: nth($value, 1); //tipografia
    $type2: nth($value, 2); 
    $type3: nth($value, 3); 
    $type4: nth($value, 4); 
    $type5: nth($value, 5); 
    $type6: nth($value, 6); 
    $type7: nth($value, 7); 
    .wrap-item-type {
 
        position: relative;
        width: 100%;
        transition: all ease 300ms;
        &:last-child {
   
            float: left;
        }
        &:hover {
            box-shadow: 0px 15px 19px 0px rgba(0, 0, 0, 0.16);
        }
    }
    .wrap-item-type:nth-child(#{$i}) {
        float: left;
        background-color: white;
        .item {

            float: left;
            padding: 10px 0;
            position: relative;
            font-size: 14px;
            text-align: center;
            &:after {
                width: 100%;
                text-align: center;
                content: "#{$name}";
            }
        }
        .item-0 { @include font-bold(); color:#ec4137; word-wrap: break-word; }
        .item-1 { &:after {                       content: "#{$type1}"; } }
        .item-2 { &:after {                       content: "#{$type2}"; } }
        .item-3 { &:after {                       content: "#{$type3}"; } }
        .item-4 { &:after {                       content: "#{$type4}"; } }
        .item-5 { &:after {                       content: "#{$type5}"; } }
        .item-6 { &:after { @include font-bold(); content: "#{$type6}"; } }
        .item-7 { &:after { @include font-bold(); content: "#{$type7}"; } }
    }
}



/**textos fluidos**/

.fluid-box{
    max-width: 800px;
    .item {
        box-sizing: border-box;
        width: 25%;
        border: 1px solid #d4d4d4;
        margin-right: -1px;
        margin-top: -1px;
    }

}



@each $name,
$value in $headersFluids {
    $i: index(($headersFluids), ($name $value));


    $typeFluid0: $name; //funcion del fipografia
    $typeFluid1: nth($value, 1); //tipografia
    $typeFluid2: nth($value, 2); 
    $typeFluid3: nth($value, 3); 

    .wrap-item-typeFluid {
        position: relative;
        width: 100%;
        transition: all ease 300ms;
        &:last-child {
            border-bottom: 1px solid #eaeaea;
            float: left;
        }
        &:hover {
            box-shadow: 0px 15px 19px 0px rgba(0, 0, 0, 0.16);
        }
    }
    .wrap-item-typeFluid:nth-child(#{$i}) {
        float: left;
        background-color: white;
        .item {
          
            float: left;
            padding: 10px 0;
            position: relative;
            font-size: 14px;
            text-align: center;
            &:after {
                width: 100%;
                text-align: center;
                content: "#{$name}";
            }
        }
        .item-0 { @include font-bold(); color:#ec4137; word-wrap: break-word; }
        .item-1 { &:after {                       content: "#{$typeFluid1}"; } }
        .item-2 { &:after {                       content: "#{$typeFluid2}"; } }
        .item-3 { &:after {                       content: "#{$typeFluid3}"; } }

    }
}





.tag-wrap-item {
    background-color: white;
    position: relative;
    width: 100%;
    transition: all ease 300ms;
    &:last-child {}
    &:hover {
        box-shadow: 0px 15px 19px 0px rgba(0, 0, 0, 0.16);
    }
    .item {
        float: left;
        position: relative;
        font-size: 12px;
        text-align: center;
        margin-left: -1px;
        margin-top: -1px;
        &:after {
            border: 1px solid #eaeaea;
            width: 100%;
            height: 100%;
            float: left;
            padding: 5px;
            left: 0;
            top: 0;
            &:empty {
                display: none;
            }
        }
    }
}
@mixin tagSpacing($spacingArray, $spacingName,$totalItems) {




    @each $name,
    $value in $spacingArray {
        $i: index(($spacingArray), ($name $value));
        $spacing0: $name; //funcion del fipografia
        $spacing1: nth($value, 1); //tipografia
        $spacing2: nth($value, 2);
        $spacing3: nth($value, 3);
        $spacing4: nth($value, 4);

        .#{$spacingName} {
            .tag-wrap-item:nth-child(#{$i}) {
                .item {
                    width: 100% / $totalItems ;
                    &:after {
                        content: "#{$name}";
                    }
                }
                .item-0 { color: #ec4137; word-wrap: break-word; }
                .item-1 { &:after { content: "#{$spacing1}"; } }
                .item-2 { &:after { content: "#{$spacing2}"; } }
                .item-3 { &:after { content: "#{$spacing3}"; } }
                .item-4 { &:after { content: "#{$spacing4}"; } }
            }
        }
    }
}


    /* margin*/
    @include tagSpacing( $margin ,'marginbox',5);
    @include tagSpacing( $margin-y,'marginbox-y',5);
    @include tagSpacing( $margin-x,'marginbox-x',5);
    @include tagSpacing( $margin-top,'marginbox-top',5);
    @include tagSpacing( $margin-right,'marginbox-right',5);
    @include tagSpacing( $margin-bottom,'marginbox-bottom',5);
    @include tagSpacing( $margin-left,'marginbox-left',5);

    /* padding*/
    @include tagSpacing( $padding,'paddingbox',5);
    @include tagSpacing( $padding-y,'paddingbox-y',5);
    @include tagSpacing( $padding-x,'paddingbox-x',5);
    @include tagSpacing( $padding-top,'paddingbox-top',5);
    @include tagSpacing( $padding-left,'paddingbox-left',5);
    @include tagSpacing( $padding-bottom,'paddingbox-bottom',5);
    @include tagSpacing( $padding-right,'paddingbox-right',5);


    .site-menu-mobile{
        background-color: black;
        position: fixed;
        height: 100vh;

    }
    .site-navigation{

        display: none;
            @media (min-width:$break-md) {
                display: block;
        }
            @media (min-width:$break-lg) {
        }
    }
